{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/asilverde/Projects/Group24/course_api/react-ui/src/components/AddClasses.js\",\n    _s = $RefreshSig$();\n\n/*import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\nimport Button from 'react-bootstrap/Button'\nimport { sleep } from \"./FunctionalCalendar.js\"\nimport { Popover } from '@material-ui/core';\n\nlet search_input;\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// helper function for input of rgb\nfunction rgb(r, g, b){\n    return \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  }\n\nexport default class AddClasses extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userCourses: []\n        }\n    }\n\n    handleAddClick() {\n        if (search_input==null) {\n            alert(\"Cannot add null class!\")\n        }\n        else if (containsObject(search_input, this.state.userCourses)) {\n            alert(\"Class already in schedule!\")\n        } else {\n            this.setState({userCourses : this.state.userCourses.concat(search_input)}, () => {\n                this.props.addClick.handleAddClick(this.state.userCourses);\n                let i;\n                for (i=0; i < this.state.userCourses.length; i++) {\n                this.state.userCourses[i].backgroundColor = rgb(this.state.userCourses[i].CRN/8, this.state.userCourses[i].rating*this.state.userCourses[i].rating*7, this.state.userCourses[i].CRN/10)\n                this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n                this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n            }\n            })\n           // alert(\"Adding \" +search_input.title + \" to schedule\")\n        }\n    }\n   render() {\n    return(\n        <div class=\"spacer\">\n            <div class=\"left\">\n            <Autocomplete\n                options={this.state.userCourses}\n                autoComplete={true}\n                onChange={(event, object) => {\n                    //console.log(object)\n                    search_input = object;\n                }}\n                getOptionLabel={(option) => option.title}\n                renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n            />\n            </div>\n            <Button onClick={() => {\n                this.handleAddClick();}}> Add\n            </Button>\n        </div>\n    )\n   }\n\n}\nfunction AddClass(props) {\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n  \n    React.useEffect(() => {\n      let active = true;\n  \n      if (!loading) {\n        return undefined;\n      }\n  \n      (async () => {\n        const response = await fetch(props.route).then(response => response.json().then(data => {\n          setOptions(data);\n      })\n      );\n        await sleep(1e3);    \n        const countries = \"loading\";\n        if (response != null) {\n        countries = await response.json();\n      }\n        if (active) {\n          setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n        }\n      })();\n  \n      return () => {\n        active = false;\n      };\n    }, [loading]);\n  \n    React.useEffect(() => {\n      if (!open) {\n        setOptions([]);\n      }\n    }, [open]);\n    return options;\n    \n}*/\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\nimport Button from 'react-bootstrap/Button';\nimport { sleep } from \"../App.js\";\nimport { Popover } from '@material-ui/core';\nlet search_input;\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i] === obj) {\n      return true;\n    }\n  }\n\n  return false;\n} // helper function for input of rgb\n\n\nfunction rgb(r, g, b) {\n  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\n\nexport default class AddClasses extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userCourses: []\n    };\n  }\n\n  handleAddClick() {\n    if (search_input == null) {\n      alert(\"Cannot add null class!\");\n    } else if (containsObject(search_input, this.state.userCourses)) {\n      alert(\"Class already in schedule!\");\n    } else {\n      this.setState({\n        userCourses: this.state.userCourses.concat(search_input)\n      }, () => {\n        this.props.addClick.handleAddClick(this.state.userCourses);\n        let i;\n\n        for (i = 0; i < this.state.userCourses.length; i++) {\n          this.state.userCourses[i].backgroundColor = rgb(this.state.userCourses[i].CRN / 8, this.state.userCourses[i].rating * this.state.userCourses[i].rating * 7, this.state.userCourses[i].CRN / 10);\n          this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n          this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n        }\n      }); // alert(\"Adding \" +search_input.title + \" to schedule\")\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spacer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: this.state.userCourses,\n          autoComplete: true,\n          onChange: (event, object) => {\n            //console.log(object)\n            search_input = object;\n          },\n          getOptionLabel: option => option.title,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          this.handleAddClick();\n        },\n        children: \" Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction AddClass(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await fetch(props.route).then(response => response.json().then(data => {\n        setOptions(data);\n      }));\n      await sleep(1e3);\n      let countries = \"loading\";\n\n      if (response != null) {\n        countries = await response.json();\n      }\n\n      if (active) {\n        setOptions(Object.keys(countries).map(key => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return options;\n}\n\n_s(AddClass, \"NAnsH/wQUpBOztFs1nPXEavBw+I=\");\n\n_c = AddClass;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClass\");","map":{"version":3,"sources":["/home/asilverde/Projects/Group24/course_api/react-ui/src/components/AddClasses.js"],"names":["React","Autocomplete","TextField","data","Button","sleep","Popover","search_input","containsObject","obj","list","i","length","rgb","r","g","b","AddClasses","Component","constructor","state","userCourses","handleAddClick","alert","setState","concat","props","addClick","backgroundColor","CRN","rating","borderColor","groupId","render","event","object","option","title","params","AddClass","open","setOpen","useState","options","setOptions","loading","useEffect","active","undefined","response","fetch","route","then","json","countries","Object","keys","map","key","item"],"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","sourcesContent":["/*import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\nimport Button from 'react-bootstrap/Button'\nimport { sleep } from \"./FunctionalCalendar.js\"\nimport { Popover } from '@material-ui/core';\n\nlet search_input;\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// helper function for input of rgb\nfunction rgb(r, g, b){\n    return \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  }\n\nexport default class AddClasses extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userCourses: []\n        }\n    }\n\n    handleAddClick() {\n        if (search_input==null) {\n            alert(\"Cannot add null class!\")\n        }\n        else if (containsObject(search_input, this.state.userCourses)) {\n            alert(\"Class already in schedule!\")\n        } else {\n            this.setState({userCourses : this.state.userCourses.concat(search_input)}, () => {\n                this.props.addClick.handleAddClick(this.state.userCourses);\n                let i;\n                for (i=0; i < this.state.userCourses.length; i++) {\n                this.state.userCourses[i].backgroundColor = rgb(this.state.userCourses[i].CRN/8, this.state.userCourses[i].rating*this.state.userCourses[i].rating*7, this.state.userCourses[i].CRN/10)\n                this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n                this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n            }\n            })\n           // alert(\"Adding \" +search_input.title + \" to schedule\")\n        }\n    }\n   render() {\n    return(\n        <div class=\"spacer\">\n            <div class=\"left\">\n            <Autocomplete\n                options={this.state.userCourses}\n                autoComplete={true}\n                onChange={(event, object) => {\n                    //console.log(object)\n                    search_input = object;\n                }}\n                getOptionLabel={(option) => option.title}\n                renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n            />\n            </div>\n            <Button onClick={() => {\n                this.handleAddClick();}}> Add\n            </Button>\n        </div>\n    )\n   }\n\n}\nfunction AddClass(props) {\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n  \n    React.useEffect(() => {\n      let active = true;\n  \n      if (!loading) {\n        return undefined;\n      }\n  \n      (async () => {\n        const response = await fetch(props.route).then(response => response.json().then(data => {\n          setOptions(data);\n      })\n      );\n        await sleep(1e3);    \n        const countries = \"loading\";\n        if (response != null) {\n        countries = await response.json();\n      }\n        if (active) {\n          setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n        }\n      })();\n  \n      return () => {\n        active = false;\n      };\n    }, [loading]);\n  \n    React.useEffect(() => {\n      if (!open) {\n        setOptions([]);\n      }\n    }, [open]);\n    return options;\n    \n}*/\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\nimport Button from 'react-bootstrap/Button'\nimport { sleep } from \"../App.js\"\nimport { Popover } from '@material-ui/core';\n\nlet search_input;\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// helper function for input of rgb\nfunction rgb(r, g, b){\n    return \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  }\n\nexport default class AddClasses extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userCourses: []\n        }\n    }\n\n    handleAddClick() {\n        if (search_input==null) {\n            alert(\"Cannot add null class!\")\n        }\n        else if (containsObject(search_input, this.state.userCourses)) {\n            alert(\"Class already in schedule!\")\n        } else {\n            this.setState({userCourses : this.state.userCourses.concat(search_input)}, () => {\n                this.props.addClick.handleAddClick(this.state.userCourses);\n                let i;\n                for (i=0; i < this.state.userCourses.length; i++) {\n                this.state.userCourses[i].backgroundColor = rgb(this.state.userCourses[i].CRN/8, this.state.userCourses[i].rating*this.state.userCourses[i].rating*7, this.state.userCourses[i].CRN/10)\n                this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n                this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n            }\n            })\n           // alert(\"Adding \" +search_input.title + \" to schedule\")\n        }\n    }\n   render() {\n    return(\n        <div class=\"spacer\">\n            <div class=\"left\">\n            <Autocomplete\n                options={this.state.userCourses}\n                autoComplete={true}\n                onChange={(event, object) => {\n                    //console.log(object)\n                    search_input = object;\n                }}\n                getOptionLabel={(option) => option.title}\n                renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n            />\n            </div>\n            <Button onClick={() => {\n                this.handleAddClick();}}> Add\n            </Button>\n        </div>\n    )\n   }\n\n}\nfunction AddClass(props) {\n    const [open, setOpen] = React.useState(false);\n    const [options, setOptions] = React.useState([]);\n    const loading = open && options.length === 0;\n  \n    React.useEffect(() => {\n      let active = true;\n  \n      if (!loading) {\n        return undefined;\n      }\n  \n      (async () => {\n        const response = await fetch(props.route).then(response => response.json().then(data => {\n          setOptions(data);\n      })\n      );\n        await sleep(1e3);\n        let countries = \"loading\";\n        if (response != null) {\n        countries = await response.json();\n      }\n        if (active) {\n          setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n        }\n      })();\n  \n      return () => {\n        active = false;\n      };\n    }, [loading]);\n  \n    React.useEffect(() => {\n      if (!open) {\n        setOptions([]);\n      }\n    }, [open]);\n    return options;\n\n}"]},"metadata":{},"sourceType":"module"}