{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/asilverde/CS196/Group24/course_api/react-ui/src/App.js\";\n\n/*import ReactCalendar from \"./components/ReactCalendar\";\nimport AddClasses from \"./components/AddClasses\"\nimport FunctionalCalendar from \"./components/FunctionalCalendar\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport React from \"react\";\nimport './App.css';\n\nfunction App() {\n  return (\n      <body>\n        <FunctionalCalendar/>\n      </body>\n  );\n}\n\nexport default App; */\nimport React, { useEffect, useState } from 'react';\nimport ReactCalendar from './components/ReactCalendar';\nimport AddClasses from './components/AddClasses';\nimport ReactRoster from \"./components/Roster\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Button, Dropdown, DropdownButton, ThemeProvider } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormGroup, List } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from 'react-bootstrap/Table';\nimport * as rosterdata from './components/roster.json';\nimport SemesterSelector from \"./components/SemesterSelector\";\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\n\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport CourseSelect from \"./components/CourseSelect\";\nlet search_input = 1;\nlet class_input = 1;\n/*\nvar r = document.querySelector(':root');\nfunction myFunction_get() {\n   var rs = getComputedStyle(r);\n   alert(\"The value of --height is: \" + rs.getPropertyValue('--height'));\n }\n function myFunction_set() {\n   r.style.setProperty('--height', );\n }\n*/\n// helper function for checking class with existing classes\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i] === obj) {\n      return true;\n    }\n  }\n\n  return false;\n} // helper function for input of rgb\n\n\nfunction color(crn) {\n  let gray = 2.5;\n  let brightness = 60;\n  let r = (Math.sin(crn) + gray) * brightness;\n  let g = (Math.sin(crn * crn) + gray) * brightness;\n  let b = (Math.sin(crn * crn * crn) + gray) * (brightness + 5);\n  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n}\n\nfunction rgb(r, g, b) {\n  return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n} // helper function for \"random\" seed generator\n\n\nexport default class FunctionalCalendar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      year: \"\",\n      season: \"Season\",\n      department: \"\",\n      class: {\n        title: \"Temp\",\n        name: \"none\",\n        number: \"none\",\n        department: \"none\",\n        prof: \"none\",\n        rating: \"0\",\n        disparity: \"0\",\n        credits: \"0\",\n        section: \"L1\",\n        CRN: \"12402\",\n        type: \"Lecture\",\n        daysOfWeek: [2, 4],\n        startTime: \"14:00\",\n        slotDuration: \"00:50\",\n        groupId: \"this will be changed automatically\",\n        id: \"1\",\n        display: \"auto\",\n        seatsleft: \"0\",\n        capacity: \"30\"\n      },\n      searchRoute: \"\",\n      searchCourseRoute: \"\",\n      rosterRoute: \"\",\n      searchStage: \"0\",\n      userCourses: rosterdata.courses,\n      name: \"test\",\n      mingpa: \"0\",\n      totalcredits: \"0\",\n      avgdisparity: \"0\",\n      filterstarttime: \"0\",\n      filterendtime: \"0\",\n      opensections: \"false\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.setClass = this.setClass.bind(this);\n    this.handleSeasonChange = this.handleSeasonChange.bind(this);\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleDeptSelect = this.handleDeptSelect.bind(this);\n    this.handleClassSelect = this.handleClassSelect.bind(this);\n    this.getCRNs = this.getCRNs.bind(this);\n    this.setEventColors = this.setEventColors.bind(this);\n    this.eventsel = this.eventsel.bind(this);\n    this.setTotalCredits = this.setTotalCredits.bind(this);\n    this.setAverageDisparity = this.setAverageDisparity.bind(this);\n  }\n\n  setAverageDisparity() {\n    let i;\n    this.state.avgdisparity = 0;\n\n    for (i = 0; i < this.state.userCourses.length; i++) {\n      this.state.avgdisparity += this.state.userCourses[i].disparity * 1;\n    }\n\n    this.state.avgdisparity = Math.round(this.state.avgdisparity / this.state.userCourses.length * 100) / 100;\n\n    if (this.state.userCourses.length == 0) {\n      this.state.avgdisparity = 0;\n    }\n  }\n\n  setTotalCredits() {\n    let i;\n    this.state.totalcredits = 0;\n\n    for (i = 0; i < this.state.userCourses.length; i++) {\n      this.state.totalcredits += this.state.userCourses[i].credits * 1;\n    }\n  }\n\n  eventsel(i) {\n    console.log(\"i is:\" + i);\n    this.state.userCourses[i * 1].display = \"auto\"; //this.state.userCourses[1].setProp( \"backgroundColor\", \"blue\")\n\n    this.state.userCourses[i * 1].backgroundColor = \"blue\";\n  }\n\n  getCRNs() {\n    let i;\n    let list = [];\n\n    for (i = 0; i < this.state.userCourses.length; i++) {\n      list[i] = this.state.userCourses[i].CRN;\n    }\n\n    alert(\"CRNs: \" + list);\n  }\n\n  setEventColors() {\n    let i;\n    this.state.totalcredits = 0;\n\n    for (i = 0; i < this.state.userCourses.length; i++) {\n      this.state.userCourses[i].backgroundColor = color(this.state.userCourses[i].CRN);\n      this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n      this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n      this.state.userCourses[i].title = this.state.userCourses[i].name + \" \\t\" + this.state.userCourses[i].disparity + \" \" + this.state.userCourses[i].rating + \"/5 \" + this.state.userCourses[i].seatsleft + \"/\" + this.state.userCourses[i].capacity; //full class\n\n      if (this.state.userCourses[i].seatsleft == 0) {\n        this.state.userCourses[i].backgroundColor = rgb(50, 30, 30);\n        this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n        this.state.userCourses[i].title = this.state.userCourses[i].name + \" \\n\" + this.state.userCourses[i].disparity + \" \" + this.state.userCourses[i].rating + \"/5 \" + this.state.userCourses[i].seatsleft + \"/\" + this.state.userCourses[i].capacity + \" (FULL)\";\n      }\n\n      this.state.totalcredits += this.state.userCourses[i].credits * 1;\n    }\n\n    console.log(this.state.totalcredits);\n  }\n\n  setClass(courselist) {\n    this.setState({\n      userCourses: courselist\n    });\n  }\n\n  handleAddClick() {\n    //this is a temporary class template until the api is done\n    console.log(this.state.class);\n\n    if (this.state.class.name == null) {\n      alert(\"Cannot add null class!\");\n    } else if (containsObject(this.state.class.name, this.state.userCourses)) {\n      alert(\"Class already in schedule!\");\n    } else {\n      this.setState({\n        userCourses: this.state.userCourses.concat(this.state.class)\n      }, () => {\n        this.setClass(this.state.userCourses);\n      });\n    }\n\n    this.setTotalCredits();\n    this.setAverageDisparity();\n  }\n\n  handleClick() {\n    this.setState({\n      searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season,\n      searchCourseRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n      department: search_input.id,\n      rosterRoute: \"/roster\" + class_input.id,\n      searchStage: this.state.searchStage + 1,\n      mingpa: this.state.mingpa\n    });\n    console.log(\"search route: \" + this.state.searchCourseRoute);\n    console.log(\"search_input: \" + search_input.id);\n    console.log(\"this.state.department: \" + this.state.department);\n    console.log(\"selected class: \" + class_input.id + \" \" + class_input.name);\n    console.log(class_input);\n  }\n\n  onChange(e) {\n    let updateRoutes = () => {\n      this.setState({\n        searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season,\n        department: search_input.id,\n        searchCourseRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n        searchStage: this.state.searchStage + 1,\n        mingpa: this.state.mingpa\n      });\n    };\n\n    if (e.target.id === \"year\") {\n      this.setState({\n        year: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"season\") {\n      this.setState({\n        season: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"department\") {\n      this.setState({\n        department: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"class\") {\n      this.setState({\n        class: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"gpaslider\") {\n      this.setState({\n        mingpa: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"starttimeslider\") {\n      this.setState({\n        filterstarttime: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"endtimeslider\") {\n      this.setState({\n        filterendtime: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    }\n\n    if (e.target.id === \"opensections\") {\n      this.setState({\n        opensections: e.target.value\n      }, () => {\n        updateRoutes();\n      });\n    } //this.setState({userCourses : rosterdata.courses})\n\n\n    this.setState({\n      searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season,\n      searchCourseRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n      searchStage: this.state.searchStage + 1\n    });\n    console.log(\"search route: \" + this.state.searchCourseRoute);\n    console.log(\"seearch_input: \" + search_input.id);\n    console.log(\"this.state.department: \" + this.state.department);\n    console.log(\"selected class: \" + class_input.id + \" \" + class_input.name);\n    console.log(class_input);\n    console.log(\"mingpa:\" + this.state.mingpa);\n  }\n  /*  handleAddClick(courselist) {\n        this.setState({userCourses : courselist})\n    }*/\n\n\n  handleRemoveClick(courselist) {\n    this.setState({\n      userCourses: courselist\n    }, () => {});\n  }\n\n  handleYearChange(newYear) {\n    this.setState({\n      year: newYear\n    }, () => {\n      this.setState({\n        searchRoute: \"search/\" + this.state.year + \"/\"\n      });\n    });\n  }\n\n  handleSeasonChange(newSeason) {\n    this.setState({\n      season: newSeason\n    }, () => {\n      this.setState({\n        searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season\n      });\n    });\n  }\n\n  handleDeptSelect(newDept) {\n    this.setState({\n      department: newDept,\n      searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + newDept\n    }, () => {\n      console.log(this.state.searchRoute);\n    });\n  }\n\n  handleClassSelect(newClass) {\n    this.setState({\n      class: {\n        title: \"temp\",\n        name: this.state.department + \" \" + newClass,\n        number: newClass,\n        department: this.state.department,\n        prof: \"...\",\n        rating: \"3\",\n        disparity: \"3.0\",\n        credits: \"3\",\n        section: \"L1\",\n        CRN: \"12402\",\n        type: \"Lecture\",\n        daysOfWeek: [2, 4],\n        startTime: \"14:00\",\n        slotDuration: \"00:50\",\n        groupId: \"this will be changed automatically\",\n        id: \"1\",\n        display: \"auto\",\n        seatsleft: \"0\",\n        capacity: \"30\"\n      },\n      searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + this.state.department + \"/\" + newClass\n    }, () => {\n      console.log(this.state.searchRoute);\n      console.log(this.state.class);\n    });\n  }\n\n  render() {\n    return this.setEventColors(), this.setTotalCredits(), this.setAverageDisparity(),\n    /*#__PURE__*/\n    //this.eventsel(1),\n    //this.state.userCourses[1].display = \"auto\",\n    _jsxDEV(\"html\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'left_container',\n        style: {\n          height: window.innerHeight,\n          maxHeight: window.innerHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'search_fields',\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            interval: null,\n            children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Choose Semester\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(SemesterSelector, {\n                  year: this.state.year,\n                  season: this.state.season,\n                  onYearChange: this.handleYearChange,\n                  onSeasonChange: this.handleSeasonChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'addClasses',\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"exclude full sections \", this.state.opensections, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                          controlId: \"opensections\",\n                          children: /*#__PURE__*/_jsxDEV(\"label\", {\n                            class: \"switch\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"checkbox\",\n                              controlId: \"opensections\",\n                              id: \"opensections\",\n                              onchange: this.onChange\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 377,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              class: \"slider round\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 378,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 376,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          children: ['checkbox'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"mb-3\",\n                            style: {\n                              height: 5,\n                              position: \"relative\",\n                              paddingTop: 0\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              class: \"weekdaysfilter\",\n                              children: \"M\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 388,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              class: \"weekdaysfilter\",\n                              children: \"T\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 389,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              class: \"weekdaysfilter\",\n                              children: \"W\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 390,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              class: \"weekdaysfilter\",\n                              children: \"T\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 391,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              class: \"weekdaysfilter\",\n                              children: \"F\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 392,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 393,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                              inline: true,\n                              type: type,\n                              id: `inline-${type}-1`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 394,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                              inline: true,\n                              type: type,\n                              id: `inline-${type}-1`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 395,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                              inline: true,\n                              type: type,\n                              id: `inline-${type}-1`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 396,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                              inline: true,\n                              type: type,\n                              id: `inline-${type}-1`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 397,\n                              columnNumber: 57\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                              inline: true,\n                              type: type,\n                              id: `inline-${type}-1`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 398,\n                              columnNumber: 57\n                            }, this)]\n                          }, `inline-${type}`, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 386,\n                            columnNumber: 37\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"Attributes:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                          className: \"professor_filter\",\n                          size: \"small\" //multiple\n                          //limitTags={2}\n                          //create function to get all professor for certain course\n                          //options={options}\n                          ,\n                          autoComplete: true,\n                          onChange: (event, object) => {},\n                          getOptionLabel: option => option.prof,\n                          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            variant: \"outlined\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 418,\n                            columnNumber: 70\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 408,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"Part of Term:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                          className: \"professor_filter\",\n                          size: \"small\" //multiple\n                          //limitTags={2}\n                          //create function to get all professor for certain course\n                          //options={options}\n                          ,\n                          autoComplete: true,\n                          onChange: (event, object) => {},\n                          getOptionLabel: option => option.prof,\n                          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            variant: \"outlined\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 433,\n                            columnNumber: 70\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            controlId: \"starttimeslider\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: [\"Start time: \", this.state.filterstarttime]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 441,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"range\",\n                              min: \"8\",\n                              max: \"21\",\n                              step: \"1\",\n                              onChange: this.onChange\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 442,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 440,\n                            columnNumber: 25\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            controlId: \"endtimeslider\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: [\"End time: \", this.state.filterendtime]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 449,\n                              columnNumber: 29\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              type: \"range\",\n                              min: \"8.5\",\n                              max: \"21.5\",\n                              step: \"1\",\n                              onChange: this.onChange\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 450,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 25\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          size: \"sm\",\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            controlId: \"exampleForm.SelectCustom\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: \"Credits:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 459,\n                              columnNumber: 28\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              as: \"select\",\n                              custom: true,\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"0\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 461,\n                                columnNumber: 30\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"1\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 462,\n                                columnNumber: 30\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 463,\n                                columnNumber: 30\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"3\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 464,\n                                columnNumber: 30\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"4\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 465,\n                                columnNumber: 30\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                children: \"5\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 466,\n                                columnNumber: 30\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 460,\n                              columnNumber: 28\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 458,\n                            columnNumber: 26\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 457,\n                          columnNumber: 26\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Form, {\n                          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                            controlId: \"gpaslider\",\n                            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                              children: [\"GPA: \", this.state.mingpa]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 476,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                              id: \"gpaslider\",\n                              type: \"range\",\n                              min: \"0\",\n                              max: \"4\",\n                              step: \"0.01\",\n                              onChange: this.onChange\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 477,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 475,\n                            columnNumber: 25\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 474,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 471,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add Classes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addClasses\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"Department:\", /*#__PURE__*/_jsxDEV(CourseSelect, {\n                          route: this.state.searchRoute,\n                          onDeptSelect: this.handleDeptSelect,\n                          type: \"department\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"Class:\", /*#__PURE__*/_jsxDEV(CourseSelect, {\n                          route: this.state.searchRoute,\n                          onClassSelect: this.handleClassSelect,\n                          type: \"classes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [\"Professor:\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                          className: \"professor_filter\",\n                          size: \"small\" //create function to get all professor for certain course\n                          //options={options}\n                          ,\n                          autoComplete: true,\n                          onChange: (event, object) => {},\n                          getOptionLabel: option => option.prof,\n                          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            variant: \"outlined\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 513,\n                            columnNumber: 70\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 505,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 504,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          type: \"submit\",\n                          onClick: this.handleAddClick,\n                          style: {\n                            margin: 18\n                          },\n                          children: \"Add Class\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 517,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReactRoster, {\n          credits: this.state.totalcredits,\n          avggpa: this.state.avgdisparity,\n          userCourses: this.state.userCourses,\n          CRNs: {\n            getCRNs: this.getCRNs.bind(this)\n          },\n          removeClick: {\n            handleRemoveClick: this.handleRemoveClick.bind(this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n        events: this.state.userCourses,\n        select: {\n          eventsel: this.eventsel.bind(this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/*\nexport function rosterCRNs(this) {\n    let i;\n    let list = [];\n    for (i=0; i<this.state.userCourses.length; i++) {\n    list[i] = this.state.userCourses[i].CRN\n    }\n    alert(\"CRNs: \" + list)\n}\n*/\n\nexport function sleep(delay = 0) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n/*\nfunction Departments(props) {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n    var type = props.type;\n    const response = \"loading\";\n    (async () => {\n       \n      const response = await fetch(props.route).then(response => response.json().then(data => {\n        setOptions(data);\n    })\n    );\n      await sleep(1e3); // For demo purposes.\n      const countries = \"loading\";\n     /* if (response != null) {\n      countries = await response.json();\n    }\n      if (active) {\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <div >\n    <Autocomplete\n      id=\"departments\"\n      size=\"small\"\n      //multiple\n      //limitTags={2}\n      //style={{ width: 200 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.id + \": \" + option.name}\n      options={options}\n      loading={loading}\n      onClick={props.onChange}\n      onChange={props.onChange,\n        (event, object) => {\n          if (props.type == \"department\") {\n        search_input = object;\n          }\n          else if (props.type == \"classes\") {\n        class_input = object;\n          }\n          \n    }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          id=\"department\"\n          label={props.type}\n          variant=\"outlined\"\n          value={props.department}\n          onChange={props.onChange}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n        \n        )}\n    />\n    </div>\n  );\n}\n\n*/","map":{"version":3,"sources":["/home/asilverde/CS196/Group24/course_api/react-ui/src/App.js"],"names":["React","useEffect","useState","ReactCalendar","AddClasses","ReactRoster","Carousel","Button","Dropdown","DropdownButton","ThemeProvider","Form","InputGroup","FormControl","Autocomplete","TextField","FormGroup","List","CircularProgress","Table","rosterdata","SemesterSelector","CourseSelect","search_input","class_input","containsObject","obj","list","i","length","color","crn","gray","brightness","r","Math","sin","g","b","rgb","FunctionalCalendar","Component","constructor","state","year","season","department","class","title","name","number","prof","rating","disparity","credits","section","CRN","type","daysOfWeek","startTime","slotDuration","groupId","id","display","seatsleft","capacity","searchRoute","searchCourseRoute","rosterRoute","searchStage","userCourses","courses","mingpa","totalcredits","avgdisparity","filterstarttime","filterendtime","opensections","onChange","bind","handleClick","handleAddClick","setClass","handleSeasonChange","handleYearChange","handleDeptSelect","handleClassSelect","getCRNs","setEventColors","eventsel","setTotalCredits","setAverageDisparity","round","console","log","backgroundColor","alert","borderColor","courselist","setState","concat","e","updateRoutes","target","value","handleRemoveClick","newYear","newSeason","newDept","newClass","render","height","window","innerHeight","maxHeight","map","position","paddingTop","event","object","option","params","margin","sleep","delay","Promise","resolve","setTimeout"],"mappings":"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":["/*import ReactCalendar from \"./components/ReactCalendar\";\nimport AddClasses from \"./components/AddClasses\"\nimport FunctionalCalendar from \"./components/FunctionalCalendar\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport React from \"react\";\nimport './App.css';\n\nfunction App() {\n  return (\n      <body>\n        <FunctionalCalendar/>\n      </body>\n  );\n}\n\nexport default App; */\nimport React, {useEffect, useState} from 'react'\nimport ReactCalendar from './components/ReactCalendar'\nimport AddClasses from './components/AddClasses'\nimport ReactRoster from \"./components/Roster\"\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\"\nimport \"./App.css\"\nimport Carousel from 'react-bootstrap/Carousel';\nimport {Button, Dropdown, DropdownButton, ThemeProvider} from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport { FormGroup, List } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from 'react-bootstrap/Table'\nimport * as rosterdata from './components/roster.json'\nimport SemesterSelector from \"./components/SemesterSelector\";\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport CourseSelect from \"./components/CourseSelect\";\n\n\n let search_input = 1;\n let class_input = 1;\n\n /*\n var r = document.querySelector(':root');\n function myFunction_get() {\n    var rs = getComputedStyle(r);\n    alert(\"The value of --height is: \" + rs.getPropertyValue('--height'));\n  }\n  function myFunction_set() {\n    r.style.setProperty('--height', );\n  }\n*/\n\n\n // helper function for checking class with existing classes\n function containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// helper function for input of rgb\nfunction color(crn){\n    let gray = 2.5\n    let brightness = 60\n    let r = (Math.sin(crn)+gray)*brightness\n    let g = (Math.sin(crn*crn)+gray)*brightness\n    let b = (Math.sin(crn*crn*crn)+gray)*(brightness+5)\n    return \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  }\n  function rgb(r, g, b){\n    return \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\n  }\n\n// helper function for \"random\" seed generator\n\nexport default class FunctionalCalendar extends React.Component {\n   constructor() {\n       super();\n       this.state = {\n           year: \"\",\n           season: \"Season\",\n           department: \"\",\n           class: {\n            title: \"Temp\",\n            name: \"none\",\n            number: \"none\",\n            department: \"none\",\n            prof: \"none\",\n            rating: \"0\",\n            disparity: \"0\",\n            credits: \"0\",\n            section: \"L1\",\n            CRN: \"12402\",\n            type: \"Lecture\",\n            daysOfWeek: [2, 4],\n            startTime: \"14:00\",\n            slotDuration: \"00:50\",\n            groupId: \"this will be changed automatically\",\n            id: \"1\",\n            display: \"auto\",\n            seatsleft: \"0\",\n            capacity: \"30\"\n           },\n           searchRoute : \"\",\n           searchCourseRoute : \"\",\n           rosterRoute : \"\",\n           searchStage : \"0\",\n           userCourses: rosterdata.courses,\n           name: \"test\",\n           mingpa: \"0\",\n           totalcredits: \"0\",\n           avgdisparity: \"0\",\n           filterstarttime: \"0\",\n           filterendtime: \"0\",\n           opensections: \"false\"\n       }\n        this.onChange = this.onChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleAddClick = this.handleAddClick.bind(this);\n        this.setClass = this.setClass.bind(this);\n        this.handleSeasonChange = this.handleSeasonChange.bind(this)\n        this.handleYearChange = this.handleYearChange.bind(this)\n        this.handleDeptSelect = this.handleDeptSelect.bind(this)\n        this.handleClassSelect = this.handleClassSelect.bind(this)\n        this.getCRNs = this.getCRNs.bind(this);\n        this.setEventColors = this.setEventColors.bind(this);\n        this.eventsel = this.eventsel.bind(this);\n        this.setTotalCredits = this.setTotalCredits.bind(this);\n        this.setAverageDisparity = this.setAverageDisparity.bind(this);\n   }\n    setAverageDisparity() {\n       let i;\n        this.state.avgdisparity = 0;\n        for (i=0; i < this.state.userCourses.length; i++) {\n            this.state.avgdisparity += this.state.userCourses[i].disparity*1;\n        }\n        this.state.avgdisparity= Math.round((this.state.avgdisparity/this.state.userCourses.length)*100)/100\n        if (this.state.userCourses.length == 0){\n            this.state.avgdisparity = 0;\n        }\n    }\n    setTotalCredits() {\n        let i;\n         this.state.totalcredits = 0;\n         for (i=0; i < this.state.userCourses.length; i++) {\n             this.state.totalcredits += this.state.userCourses[i].credits*1;\n         }\n     }\n   eventsel(i) {\n    console.log(\"i is:\" + i)\n    this.state.userCourses[i*1].display = \"auto\"\n    //this.state.userCourses[1].setProp( \"backgroundColor\", \"blue\")\n    this.state.userCourses[i*1].backgroundColor = \"blue\"\n   }\n   getCRNs() {\n    let i;\n    let list = [];\n    for (i=0; i<this.state.userCourses.length; i++) {\n    list[i] = this.state.userCourses[i].CRN\n    }\n    alert(\"CRNs: \" + list)\n   }\n   setEventColors() {\n       let i;\n       this.state.totalcredits = 0;\n    for (i=0; i < this.state.userCourses.length; i++) {\n    this.state.userCourses[i].backgroundColor = color(this.state.userCourses[i].CRN)\n    this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n    this.state.userCourses[i].groupId = this.state.userCourses[i].CRN;\n    this.state.userCourses[i].title = \n\n    this.state.userCourses[i].name + \" \\t\" +\n    this.state.userCourses[i].disparity + \" \" + \n    this.state.userCourses[i].rating + \"/5 \" + \n    this.state.userCourses[i].seatsleft + \"/\" + \n    this.state.userCourses[i].capacity;\n\n    //full class\n    if (this.state.userCourses[i].seatsleft == 0) {\n        this.state.userCourses[i].backgroundColor = rgb(50, 30, 30)  \n        this.state.userCourses[i].borderColor = this.state.userCourses[i].backgroundColor;\n        this.state.userCourses[i].title = \n\n    this.state.userCourses[i].name + \" \\n\" +\n    this.state.userCourses[i].disparity + \" \" + \n    this.state.userCourses[i].rating + \"/5 \" + \n    this.state.userCourses[i].seatsleft + \"/\" + \n    this.state.userCourses[i].capacity + \" (FULL)\";\n    }\n\n    this.state.totalcredits += this.state.userCourses[i].credits*1;\n    } \n    console.log(this.state.totalcredits)\n    \n   }\n   \n   setClass(courselist) {\n    this.setState({userCourses : courselist})\n}\n  handleAddClick() {\n      //this is a temporary class template until the api is done\n     \n      \n      console.log(this.state.class)\n if (this.state.class.name==null) {\n     alert(\"Cannot add null class!\")\n }\n else if (containsObject(this.state.class.name, this.state.userCourses)) {\n     alert(\"Class already in schedule!\");\n } else {\n     this.setState({\n         userCourses : this.state.userCourses.concat(this.state.class)}, () => {\n         this.setClass(this.state.userCourses);\n     })\n }\n this.setTotalCredits();\n this.setAverageDisparity();\n}\n    handleClick() {\n        \n    this.setState({\n        searchRoute : \"search/\" + this.state.year + \"/\" + this.state.season,\n        searchCourseRoute : \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n        department : search_input.id,\n        rosterRoute : \"/roster\" + class_input.id,\n        searchStage : this.state.searchStage + 1, \n        mingpa: this.state.mingpa,\n    });\n    \n console.log(\"search route: \" + this.state.searchCourseRoute);\n console.log(\"search_input: \" + search_input.id);\n console.log(\"this.state.department: \" + this.state.department);\n console.log(\"selected class: \" + class_input.id + \" \" +class_input.name);\n console.log(class_input);\n   }\n   \n    onChange(e) {\n        \n        let updateRoutes = () => {\n            \n            this.setState({\n                searchRoute : \"search/\" + this.state.year + \"/\" + this.state.season,\n                department : search_input.id,\n                searchCourseRoute : \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n                searchStage : this.state.searchStage + 1,\n                mingpa : this.state.mingpa\n            });\n        }\n        if (e.target.id === \"year\") {\n            this.setState({ year: e.target.value }, () => {updateRoutes()});\n        }\n        if (e.target.id === \"season\") {\n            this.setState({ season: e.target.value }, () => {updateRoutes()});\n        }\n        if (e.target.id === \"department\") {\n            this.setState({department: e.target.value}, () => {updateRoutes()});\n        }\n        if (e.target.id === \"class\") {\n            this.setState({class: e.target.value}, () => {updateRoutes()});\n        }\n        if (e.target.id === \"gpaslider\") {\n            this.setState({mingpa: e.target.value}, () => {updateRoutes()});\n        }\n        if (e.target.id === \"starttimeslider\") {\n            this.setState({filterstarttime: e.target.value}, () => {updateRoutes()});\n        }\n        if (e.target.id === \"endtimeslider\") {\n            this.setState({filterendtime: e.target.value}, () => {updateRoutes()});\n        }\n        if (e.target.id === \"opensections\") {\n            this.setState({ opensections: e.target.value }, () => {updateRoutes()});\n        }\n        //this.setState({userCourses : rosterdata.courses})\n       this.setState({\n        searchRoute : \"search/\" + this.state.year + \"/\" + this.state.season,\n        searchCourseRoute : \"search/\" + this.state.year + \"/\" + this.state.season + \"/\" + search_input.id,\n        searchStage : this.state.searchStage + 1, \n    });\n console.log(\"search route: \" + this.state.searchCourseRoute);\n console.log(\"seearch_input: \" + search_input.id);\n console.log(\"this.state.department: \" + this.state.department);\n console.log(\"selected class: \" + class_input.id + \" \" +class_input.name);\n console.log(class_input);\n console.log(\"mingpa:\" + this.state.mingpa);\n   }\n \n /*  handleAddClick(courselist) {\n       this.setState({userCourses : courselist})\n   }*/\n \nhandleRemoveClick(courselist) {\n    this.setState({userCourses: courselist}, () => {\n    })\n   \n}\nhandleYearChange(newYear) {\n    this.setState({year: newYear}, () => {\n        this.setState({searchRoute: \"search/\" + this.state.year + \"/\"})\n    });\n}\nhandleSeasonChange(newSeason) {\n    this.setState({season: newSeason}, () => {\n        this.setState({searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season})\n    });\n}\nhandleDeptSelect(newDept) {\n    this.setState({\n        department: newDept,\n        searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\"\n    + newDept}, () => {console.log(this.state.searchRoute)})\n}\nhandleClassSelect(newClass) {\n    this.setState({\n        class: {\n            title: \"temp\",\n            name: this.state.department + \" \" + newClass,\n            number: newClass,\n            department: this.state.department,\n            prof: \"...\",\n            rating: \"3\",\n            disparity: \"3.0\",\n            credits: \"3\",\n            section: \"L1\",\n            CRN: \"12402\",\n            type: \"Lecture\",\n            daysOfWeek: [2, 4],\n            startTime: \"14:00\",\n            slotDuration: \"00:50\",\n            groupId: \"this will be changed automatically\",\n            id: \"1\",\n            display: \"auto\",\n            seatsleft: \"0\",\n            capacity: \"30\"\n        },\n        searchRoute: \"search/\" + this.state.year + \"/\" + this.state.season + \"/\"\n            + this.state.department + \"/\" + newClass}, () => {console.log(this.state.searchRoute);\n            console.log(this.state.class);})\n}\n \n   render() {\n    \n       return(\n           this.setEventColors(),\n           this.setTotalCredits(),\n           this.setAverageDisparity(),\n           //this.eventsel(1),\n           //this.state.userCourses[1].display = \"auto\",\n        <html>\n        <div className={'left_container'} style={{height: window.innerHeight, maxHeight: window.innerHeight}}>\n            <div className={'search_fields'} >\n                    <Carousel interval={null}>\n                        <Carousel.Item>\n                        <h4>Choose Semester</h4>\n                            <div \n                            //className={'semesterform'}\n                            >\n                            <SemesterSelector year={this.state.year} season={this.state.season} onYearChange={this.handleYearChange} onSeasonChange={this.handleSeasonChange}/>\n                            </div>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <h4>Filters</h4>\n            <div className={'addClasses'}>\n                <Table>\n                    <tbody>\n                    <tr>\n                        <td>\n                        exclude full sections {this.state.opensections}\n                        <br></br>\n                        <Form.Group controlId=\"opensections\">\n                            <label class=\"switch\">\n                                <input type=\"checkbox\" controlId=\"opensections\" id=\"opensections\" onchange={this.onChange}/>\n                                <span class=\"slider round\"></span>\n  \n                            </label>\n                        </Form.Group>\n                        </td>\n                        <td>\n                                <Form>\n                                    {['checkbox'].map((type) => (\n                                    <div key={`inline-${type}`} className=\"mb-3\" style={{height: 5, position: \"relative\", paddingTop: 0}}>\n                                       \n                                                        <label class=\"weekdaysfilter\">M</label>\n                                                        <label class=\"weekdaysfilter\">T</label>\n                                                        <label class=\"weekdaysfilter\">W</label>\n                                                        <label class=\"weekdaysfilter\">T</label>\n                                                        <label class=\"weekdaysfilter\">F</label>\n                                                        <br></br>\n                                                        <Form.Check inline type={type} id={`inline-${type}-1`} />\n                                                        <Form.Check inline type={type} id={`inline-${type}-1`} />\n                                                        <Form.Check inline type={type} id={`inline-${type}-1`} />\n                                                        <Form.Check inline type={type} id={`inline-${type}-1`} />\n                                                        <Form.Check inline type={type} id={`inline-${type}-1`} />\n\n                                    </div>             \n                                    ))}\n                                </Form>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            Attributes:\n                            <Autocomplete\n                                            className=\"professor_filter\"\n                                            size=\"small\"\n                                            //multiple\n                                            //limitTags={2}\n                                            //create function to get all professor for certain course\n                                            //options={options}\n                                            autoComplete={true}\n                                            onChange={(event, object) => {}}\n                                            getOptionLabel={(option) => option.prof}\n                                            renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n                                            />\n                        </td> \n                        <td>\n                        Part of Term:\n                            <Autocomplete\n                                            className=\"professor_filter\"\n                                            size=\"small\"\n                                            //multiple\n                                            //limitTags={2}\n                                            //create function to get all professor for certain course\n                                            //options={options}\n                                            autoComplete={true}\n                                            onChange={(event, object) => {}}\n                                            getOptionLabel={(option) => option.prof}\n                                            renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n                                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                        <Form>\n                        <Form.Group controlId=\"starttimeslider\">\n                                    <Form.Label>Start time: {this.state.filterstarttime}</Form.Label>\n                                <Form.Control type=\"range\" min=\"8\" max=\"21\" step=\"1\" onChange={this.onChange}/>\n                                </Form.Group>\n                                </Form>\n                        </td>\n                        <td>\n                        <Form>\n                        <Form.Group controlId=\"endtimeslider\">\n                            <Form.Label>End time: {this.state.filterendtime}</Form.Label>\n                                <Form.Control type=\"range\" min=\"8.5\" max=\"21.5\" step=\"1\" onChange={this.onChange}/>\n                                </Form.Group>\n                                </Form>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                         <Form size=\"sm\">\n                         <Form.Group controlId=\"exampleForm.SelectCustom\">\n                           <Form.Label>Credits:</Form.Label>\n                           <Form.Control as=\"select\" custom>\n                             <option>0</option>\n                             <option>1</option>\n                             <option>2</option>\n                             <option>3</option>\n                             <option>4</option>\n                             <option>5</option>\n                           </Form.Control>\n                         </Form.Group>\n                       </Form>\n                        </td>\n                        <td>\n                        \n                       \n                            <Form>\n                        <Form.Group controlId=\"gpaslider\">\n                                    <Form.Label>GPA: {this.state.mingpa}</Form.Label>\n                                <Form.Control id=\"gpaslider\" type=\"range\" min=\"0\" max=\"4\" step=\"0.01\" onChange={this.onChange}/>\n                                \n                                </Form.Group>\n                                </Form>\n                        </td>\n                    </tr>\n                             </tbody>\n                                </Table> \n                            </div>\n                          \n                        </Carousel.Item>\n                        <Carousel.Item>\n                        <h4>Add Classes</h4>\n                            <div className={\"addClasses\"}>\n                                <Table>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                Department: \n                                                <CourseSelect route={this.state.searchRoute} onDeptSelect={this.handleDeptSelect} type={\"department\"}/>\n                                            </td>\n                                            <td>\n                                                Class:\n                                                <CourseSelect route={this.state.searchRoute} onClassSelect={this.handleClassSelect} type={\"classes\"}/>\n                                            </td>\n                                        </tr>\n                                    <tr>\n                                        <td>Professor: \n                                            <Autocomplete\n                                            className=\"professor_filter\"\n                                            size=\"small\"\n                                            //create function to get all professor for certain course\n                                            //options={options}\n                                            autoComplete={true}\n                                            onChange={(event, object) => {}}\n                                            getOptionLabel={(option) => option.prof}\n                                            renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n                                            />\n                                        </td> \n                                        <td>\n                                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleAddClick} style={{margin: 18}}>\n                                            Add Class\n                                        </Button>\n                                       \n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            \n                            </div>\n                        </Carousel.Item>\n                    </Carousel>\n                </div>\n            \n                <ReactRoster\n                    credits={this.state.totalcredits}\n                    avggpa={this.state.avgdisparity}\n                    userCourses={this.state.userCourses}\n                    CRNs={{getCRNs: this.getCRNs.bind(this)}}\n                    removeClick={{handleRemoveClick: this.handleRemoveClick.bind(this)}}/>\n            \n        </div>\n        \n            <ReactCalendar events={this.state.userCourses} select={{eventsel: this.eventsel.bind(this)}}/>\n        \n    </html>\n       )\n   }\n}\n/*\nexport function rosterCRNs(this) {\n    let i;\n    let list = [];\n    for (i=0; i<this.state.userCourses.length; i++) {\n    list[i] = this.state.userCourses[i].CRN\n    }\n    alert(\"CRNs: \" + list)\n}\n*/\n\nexport function sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n/*\nfunction Departments(props) {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n    var type = props.type;\n    const response = \"loading\";\n    (async () => {\n       \n      const response = await fetch(props.route).then(response => response.json().then(data => {\n        setOptions(data);\n    })\n    );\n      await sleep(1e3); // For demo purposes.\n      const countries = \"loading\";\n     /* if (response != null) {\n      countries = await response.json();\n    }\n      if (active) {\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <div >\n    <Autocomplete\n      id=\"departments\"\n      size=\"small\"\n      //multiple\n      //limitTags={2}\n      //style={{ width: 200 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.id + \": \" + option.name}\n      options={options}\n      loading={loading}\n      onClick={props.onChange}\n      onChange={props.onChange,\n        (event, object) => {\n          if (props.type == \"department\") {\n        search_input = object;\n          }\n          else if (props.type == \"classes\") {\n        class_input = object;\n          }\n          \n    }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          id=\"department\"\n          label={props.type}\n          variant=\"outlined\"\n          value={props.department}\n          onChange={props.onChange}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n        \n        )}\n    />\n    </div>\n  );\n}\n\n*/\n"]},"metadata":{},"sourceType":"module"}