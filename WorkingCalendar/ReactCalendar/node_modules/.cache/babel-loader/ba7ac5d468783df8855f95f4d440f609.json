{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/untitled/src/components/TestCalendar.js\";\nimport React, { Component } from \"react\"; //import RRule from \"rrule\";\n\nimport { Calendar } from \"@fullcalendar/core\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport FullCalendar from \"@fullcalendar/react\";\nlet calendar;\nexport default class CalendarDemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.eventClick = info => {\n      if (info) {\n        alert(\"click\");\n        calendar.refetch();\n      }\n    };\n\n    this.state = {\n      calendar: null,\n      events: this.props.events\n    };\n    this.calendarRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    calendar = new Calendar(this.calendarRef.current, {\n      //plugins\n      plugins: [timeGridPlugin],\n      //display\n      initialView: \"timeGridWeek\",\n      slotMinTime: '8:00:00',\n      slotMaxTime: \"22:00:00\",\n      allDaySlot: false,\n      hiddenDays: [0, 6],\n      //selection\n      selectable: true,\n      select: this.select,\n      //event\n      events: [],\n      eventSources: [this.state.events],\n      eventClick: this.eventClick\n    });\n    calendar.render();\n    this.setState({\n      calendar\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.calendarRef,\n      children: \"Calendar component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/untitled/src/components/TestCalendar.js"],"names":["React","Component","Calendar","timeGridPlugin","FullCalendar","calendar","CalendarDemo","constructor","props","eventClick","info","alert","refetch","state","events","calendarRef","createRef","componentDidMount","current","plugins","initialView","slotMinTime","slotMaxTime","allDaySlot","hiddenDays","selectable","select","eventSources","render","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,IAAIC,QAAJ;AACA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEhDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqCnBC,UArCmB,GAqCNC,IAAI,IAAI;AACjB,UAAGA,IAAH,EAAS;AACLC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACAN,QAAAA,QAAQ,CAACO,OAAT;AACH;AACJ,KA1CkB;;AAEf,SAAKC,KAAL,GAAa;AACTR,MAAAA,QAAQ,EAAE,IADD;AAETS,MAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM;AAFV,KAAb;AAIA,SAAKC,WAAL,gBAAmBf,KAAK,CAACgB,SAAN,EAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AACfZ,IAAAA,QAAQ,GAAG,IAAIH,QAAJ,CAAa,KAAKa,WAAL,CAAiBG,OAA9B,EAAuC;AAC/C;AACAC,MAAAA,OAAO,EAAE,CAAEhB,cAAF,CAFsC;AAI/C;AACAiB,MAAAA,WAAW,EAAE,cALkC;AAM/CC,MAAAA,WAAW,EAAE,SANkC;AAO/CC,MAAAA,WAAW,EAAE,UAPkC;AAQ/CC,MAAAA,UAAU,EAAE,KARmC;AAS/CC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,CATmC;AAW/C;AACAC,MAAAA,UAAU,EAAE,IAZmC;AAa/CC,MAAAA,MAAM,EAAE,KAAKA,MAbkC;AAe/C;AACAZ,MAAAA,MAAM,EAAE,EAhBuC;AAiB/Ca,MAAAA,YAAY,EAAE,CAAC,KAAKd,KAAL,CAAWC,MAAZ,CAjBiC;AAkB/CL,MAAAA,UAAU,EAAE,KAAKA;AAlB8B,KAAvC,CAAX;AAqBDJ,IAAAA,QAAQ,CAACuB,MAAT;AAEA,SAAKC,QAAL,CAAc;AAAExB,MAAAA;AAAF,KAAd;AACH;;AAUDuB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKb,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAhD+C","sourcesContent":["import React, { Component } from \"react\";\n//import RRule from \"rrule\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport FullCalendar from \"@fullcalendar/react\";\n\nlet calendar\nexport default class CalendarDemo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendar: null,\n            events: this.props.events\n        };\n        this.calendarRef = React.createRef();\n    }\n\n    componentDidMount() {\n         calendar = new Calendar(this.calendarRef.current, {\n            //plugins\n            plugins: [ timeGridPlugin],\n\n            //display\n            initialView: \"timeGridWeek\",\n            slotMinTime: '8:00:00',\n            slotMaxTime: \"22:00:00\",\n            allDaySlot: false,\n            hiddenDays: [0,6],\n\n            //selection\n            selectable: true,\n            select: this.select,\n\n            //event\n            events: [],\n            eventSources: [this.state.events],\n            eventClick: this.eventClick\n        });\n\n        calendar.render();\n\n        this.setState({ calendar });\n    }\n\n\n    eventClick = info => {\n        if(info) {\n            alert(\"click\")\n            calendar.refetch()\n        }\n    };\n\n    render() {\n        return <div ref={this.calendarRef}>Calendar component</div>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}