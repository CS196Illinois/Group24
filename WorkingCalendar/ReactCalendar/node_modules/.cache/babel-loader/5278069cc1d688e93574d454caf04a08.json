{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/untitled/src/components/ClassSearchBar.js\";\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Button, Dropdown, DropdownButton } from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport '../App.css';\nimport ReactCalendar from \"./ReactCalendar\";\nimport * as data from './roster.json';\n\nfunction getInput(input) {\n  return input;\n}\n\nvar search_input;\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i] === obj) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default class ClassSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      credits: false,\n      professor: false,\n      department: false,\n      userCourses: [{\n        \"title\": \"CS 125\",\n        \"prof\": \"Chapman\",\n        \"rating\": \"4\",\n        \"section\": \"L1\",\n        \"CRN\": \"1238\",\n        \"type\": \"Lecture\",\n        \"daysOfWeek\": [2, 4],\n        \"startTime\": \"12:00\",\n        \"slotDuration\": \"00:50\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactCalendar, {\n          events: this.state.userCourses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"carousel\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          interval: null,\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose Semester\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"spacer\",\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  placeholder: \"Year\",\n                  \"aria-label\": \"Year\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                  as: InputGroup.Append,\n                  variant: \"outline-secondary\",\n                  title: \"Season\",\n                  id: \"input-group-dropdown-2\",\n                  size: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#\",\n                    children: \"Fall\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#\",\n                    children: \"Winter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#\",\n                    children: \"Spring\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    href: \"#\",\n                    children: \"Summer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"spacer\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Filter Classes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Credits\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: 'checkbox',\n                  name: \"credits\",\n                  type: \"checkbox\",\n                  defaultChecked: this.state.credits,\n                  onChange: () => {\n                    this.setState({\n                      credits: !this.state.credits\n                    }, () => {});\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Professor\", /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  class: \"professor_filter\" //create function to get all professor for certain course\n                  ,\n                  options: [\"Prof1, Prof2\"],\n                  autoComplete: true,\n                  onChange: (event, object) => {\n                    search_input = getInput(object);\n                    console.log(object);\n                  },\n                  getOptionLabel: option => option.title,\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Department\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: 'checkbox',\n                  name: \"department\",\n                  type: \"checkbox\",\n                  onChange: () => {\n                    this.setState({\n                      department: !this.state.department\n                    }, () => {});\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Search Classes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"spacer\",\n              children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n                class: \"class_search_bar\",\n                options: data.courses,\n                autoComplete: true,\n                onChange: (event, object) => {\n                  search_input = getInput(object);\n                  console.log(object);\n                },\n                getOptionLabel: option => option.title,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 68\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), \"Add Class to Calendar\", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: 'add_button',\n                  value: \"Add\",\n                  onClick: () => {\n                    if (search_input != null) {\n                      //console.log(this.state.course)\n                      if (containsObject(search_input, this.state.userCourses)) {\n                        alert(\"Course already in schedule!\");\n                      } else {\n                        alert(\"Adding \" + search_input.title + \" to calendar\");\n                        var course_list = this.state.userCourses;\n                        course_list.push(search_input);\n                        this.setState({\n                          userCourses: course_list\n                        });\n                      }\n\n                      console.log(this.state.userCourses);\n                    }\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/untitled/src/components/ClassSearchBar.js"],"names":["React","Autocomplete","TextField","Carousel","Button","Dropdown","DropdownButton","InputGroup","FormControl","ReactCalendar","data","getInput","input","search_input","containsObject","obj","list","i","length","ClassSearchBar","Component","constructor","props","state","credits","professor","department","userCourses","render","Append","setState","event","object","console","log","option","title","params","courses","alert","course_list","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\"\nimport Carousel from 'react-bootstrap/Carousel'\nimport {Button, Dropdown, DropdownButton} from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport '../App.css'\nimport ReactCalendar from \"./ReactCalendar\";\nimport * as data from './roster.json'\n\n\nfunction getInput(input) {\n    return input;\n}\n\nvar search_input;\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\nexport default class ClassSearchBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            credits: false,\n            professor: false,\n            department: false,\n            userCourses: [{\n                \"title\": \"CS 125\",\n                \"prof\": \"Chapman\",\n                \"rating\": \"4\",\n                \"section\": \"L1\",\n                \"CRN\": \"1238\",\n                \"type\": \"Lecture\",\n                \"daysOfWeek\": [2,4],\n                \"startTime\": \"12:00\",\n                \"slotDuration\": \"00:50\"\n            }]\n        };\n\n    }\n\n    render() {\n\n        return(\n            <body>\n            <div>\n                <ReactCalendar events={this.state.userCourses}/>\n            </div>\n            <div class=\"carousel\">\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <h3>Choose Semester</h3>\n                        <div class=\"spacer\">\n                            <InputGroup>\n                                <FormControl\n                                    placeholder=\"Year\"\n                                    aria-label=\"Year\"\n                                    aria-describedby=\"basic-addon2\"\n                                    size=\"sm\"\n                                />\n                                <DropdownButton\n                                    as={InputGroup.Append}\n                                    variant=\"outline-secondary\"\n                                    title=\"Season\"\n                                    id=\"input-group-dropdown-2\"\n                                    size=\"sm\"\n                                >\n                                    <Dropdown.Item href=\"#\">Fall</Dropdown.Item>\n                                    <Dropdown.Item href=\"#\">Winter</Dropdown.Item>\n                                    <Dropdown.Item href=\"#\">Spring</Dropdown.Item>\n                                    <Dropdown.Item href=\"#\">Summer</Dropdown.Item>\n                                </DropdownButton>\n                            </InputGroup>\n                        </div>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <div class=\"spacer\"><h3>Filter Classes</h3></div>\n                        <label>\n                            <div>\n                                Credits\n                                <input\n                                    type={'checkbox'}\n                                    name=\"credits\"\n                                    type=\"checkbox\"\n                                    defaultChecked={this.state.credits}\n                                    onChange={() => {\n                                        this.setState({credits: !this.state.credits}, () => {\n                                        });\n                                    }}\n                                />\n                            </div>\n\n                            <div>\n                                Professor\n                                <Autocomplete\n                                    class=\"professor_filter\"\n                                    //create function to get all professor for certain course\n                                    options={[\"Prof1, Prof2\"]}\n                                    autoComplete={true}\n                                    onChange={(event, object) => {\n                                        search_input = getInput(object)\n                                        console.log(object)\n                                    }}\n                                    getOptionLabel={(option) => option.title}\n                                    renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                                />\n                            </div>\n                            <div>\n                                Department\n                                <input\n                                    type={'checkbox'}\n                                    name=\"department\"\n                                    type=\"checkbox\"\n                                    onChange={() => {\n                                        this.setState({department: !this.state.department}, () => {\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </label>\n\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <h3>Search Classes</h3>\n                        <div class=\"spacer\">\n\n                            <Autocomplete class=\"class_search_bar\"\n                                          options={data.courses}\n                                          autoComplete={true}\n                                          onChange={(event, object) => {\n                                              search_input = getInput(object)\n                                              console.log(object)\n                                          }}\n                                          getOptionLabel={(option) => option.title}\n                                          renderInput={(params) => <TextField {...params} variant=\"outlined\" />}\n                            />\n\n                            Add Class to Calendar\n                            <div>\n                                <button\n                                    className={'add_button'}\n                                    value={\"Add\"}\n                                    onClick={() => {\n                                        if (search_input != null) {\n                                            //console.log(this.state.course)\n                                            if (containsObject(search_input, this.state.userCourses)) {\n                                                alert(\"Course already in schedule!\")\n                                            } else {\n                                                alert(\"Adding \"+search_input.title+\" to calendar\");\n                                                var course_list = this.state.userCourses\n                                                course_list.push(search_input)\n                                                this.setState({userCourses: course_list})\n                                            }\n                                            console.log(this.state.userCourses)\n                                        }\n                                    }}\n                                >\n                                    Add\n                                </button>\n                            </div>\n\n                        </div>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        </body>\n        )\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}