{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/ReactCalendar/src/components/ReactCalendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport React from 'react';\nimport userCourses from './ClassSearchBar';\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json';\nimport search_input from './ClassSearchBar';\nexport default class ReactCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: props.events\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.events !== state.events) {\n      return {\n        events: props.currentRow\n      };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [timeGridPlugin],\n      initialView: 'timeGridWeek',\n      stickyHeaderDates: true,\n      stickyFooterScrollbar: true,\n      height: 'auto',\n      contentHeight: 925,\n      editable: true,\n      slotMinTime: '8:00:00',\n      slotMaxTime: \"22:00:00\",\n      hiddenDays: [0, 6],\n      headerToolbar: false,\n      allDaySlot: false,\n      expandRows: true,\n      handleWindowResize: true,\n      eventDurationEditable: false,\n      eventDragMinDistance: 0,\n      dayHeaderFormat: {\n        'weekday': 'long'\n      },\n      eventStartEditable: true,\n      durationEditable: false,\n      eventClick: this.handleDateClick //events={this.state.events}\n      //eventContent={renderEventContent}\n      ,\n      eventSources: [this.state.events]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n\n    function handleDateClick() {\n      console.log(this.state.events);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/ReactCalendar/src/components/ReactCalendar.js"],"names":["FullCalendar","timeGridPlugin","interactionPlugin","React","userCourses","ClassSearchBar","rosterdata","search_input","ReactCalendar","Component","constructor","props","state","events","getDerivedStateFromProps","currentRow","render","handleDateClick","console","log"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAGA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEF,KAAK,CAACE;AADL,KAAb;AAIH;;AAED,SAAOC,wBAAP,CAAgCH,KAAhC,EAAuCC,KAAvC,EAA8C;AAC1C,QAAID,KAAK,CAACE,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AAC/B,aAAO;AACHA,QAAAA,MAAM,EAAEF,KAAK,CAACI;AADX,OAAP;AAGH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,YAAD;AACI,MAAA,OAAO,EAAE,CAACf,cAAD,CADb;AAEI,MAAA,WAAW,EAAE,cAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAII,MAAA,qBAAqB,EAAE,IAJ3B;AAKI,MAAA,MAAM,EAAE,MALZ;AAMI,MAAA,aAAa,EAAE,GANnB;AAOI,MAAA,QAAQ,EAAE,IAPd;AAQI,MAAA,WAAW,EAAE,SARjB;AASI,MAAA,WAAW,EAAE,UATjB;AAUI,MAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,CAVhB;AAWI,MAAA,aAAa,EAAE,KAXnB;AAYI,MAAA,UAAU,EAAE,KAZhB;AAaI,MAAA,UAAU,EAAE,IAbhB;AAcI,MAAA,kBAAkB,EAAE,IAdxB;AAeI,MAAA,qBAAqB,EAAE,KAf3B;AAgBI,MAAA,oBAAoB,EAAE,CAhB1B;AAiBI,MAAA,eAAe,EAAE;AAAC,mBAAU;AAAX,OAjBrB;AAkBI,MAAA,kBAAkB,EAAE,IAlBxB;AAmBI,MAAA,gBAAgB,EAAE,KAnBtB;AAqBI,MAAA,UAAU,EAAE,KAAKgB,eArBrB,CAwBI;AACA;AAzBJ;AA0BI,MAAA,YAAY,EAAE,CAAC,KAAKL,KAAL,CAAWC,MAAZ;AA1BlB;AAAA;AAAA;AAAA;AAAA,YADJ;;AA+BA,aAASI,eAAT,GAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,MAAvB;AACH;AAEJ;;AAvDsD","sourcesContent":["import FullCalendar from '@fullcalendar/react'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport React from 'react';\n\nimport userCourses from './ClassSearchBar'\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json'\nimport search_input from './ClassSearchBar'\n\n\nexport default class ReactCalendar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            events: props.events\n        }\n\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.events !== state.events) {\n            return {\n                events: props.currentRow,\n            };\n        }\n    }\n    render() {\n\n        return(\n            <FullCalendar\n                plugins={[timeGridPlugin]}\n                initialView={'timeGridWeek'}\n                stickyHeaderDates={true}\n                stickyFooterScrollbar={true}\n                height={'auto'}\n                contentHeight={925}\n                editable={true}\n                slotMinTime={'8:00:00'}\n                slotMaxTime={\"22:00:00\"}\n                hiddenDays={[0,6]}\n                headerToolbar={false}\n                allDaySlot={false}\n                expandRows={true}\n                handleWindowResize={true}\n                eventDurationEditable={false}\n                eventDragMinDistance={0}\n                dayHeaderFormat={{'weekday':'long'}}\n                eventStartEditable={true}\n                durationEditable={false}\n\n                eventClick={this.handleDateClick}\n\n\n                //events={this.state.events}\n                //eventContent={renderEventContent}\n                eventSources={[this.state.events]}\n            />\n        )\n\n        function handleDateClick() {\n            console.log(this.state.events)\n        }\n\n    }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}