{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/untitled/src/components/ReactCalendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport React from 'react';\nimport userCourses from './ClassSearchBar';\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json';\nimport search_input from './ClassSearchBar';\nexport default class ReactCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      events: this.props.events\n    };\n\n    this.handleDateClick = arg => {\n      this.setState({\n        events: this.state.events.concat(search_input)\n      });\n      this.render();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: this.calendarComponentRef,\n      plugins: [timeGridPlugin],\n      initialView: 'timeGridWeek',\n      stickyHeaderDates: true,\n      stickyFooterScrollbar: true,\n      height: 'auto',\n      contentHeight: 925,\n      editable: true,\n      slotMinTime: '8:00:00',\n      slotMaxTime: \"22:00:00\",\n      hiddenDays: [0, 6],\n      headerToolbar: false,\n      allDaySlot: false,\n      expandRows: true,\n      handleWindowResize: true,\n      eventDurationEditable: false,\n      eventDragMinDistance: 0,\n      dayHeaderFormat: {\n        'weekday': 'long'\n      },\n      eventClick: this.handleDateClick //events={this.state.events}\n      //eventContent={renderEventContent}\n      ,\n      eventSources: [this.state.events]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/untitled/src/components/ReactCalendar.js"],"names":["FullCalendar","timeGridPlugin","React","userCourses","ClassSearchBar","rosterdata","search_input","ReactCalendar","Component","calendarComponentRef","createRef","state","events","props","handleDateClick","arg","setState","concat","render"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAIA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAEvDC,oBAFuD,gBAEhCP,KAAK,CAACQ,SAAN,EAFgC;AAAA,SAIvDC,KAJuD,GAI/C;AACJC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD;AADf,KAJ+C;;AAAA,SA6CvDE,eA7CuD,GA6CrCC,GAAG,IAAI;AACjB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBK,MAAlB,CAAyBX,YAAzB;AADE,OAAd;AAGA,WAAKY,MAAL;AACH,KAlDkD;AAAA;;AAQvDA,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,YAAD;AACI,MAAA,GAAG,EAAE,KAAKT,oBADd;AAEI,MAAA,OAAO,EAAE,CAACR,cAAD,CAFb;AAGI,MAAA,WAAW,EAAE,cAHjB;AAII,MAAA,iBAAiB,EAAE,IAJvB;AAKI,MAAA,qBAAqB,EAAE,IAL3B;AAMI,MAAA,MAAM,EAAE,MANZ;AAOI,MAAA,aAAa,EAAE,GAPnB;AAQI,MAAA,QAAQ,EAAE,IARd;AASI,MAAA,WAAW,EAAE,SATjB;AAUI,MAAA,WAAW,EAAE,UAVjB;AAWI,MAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,CAXhB;AAYI,MAAA,aAAa,EAAE,KAZnB;AAaI,MAAA,UAAU,EAAE,KAbhB;AAcI,MAAA,UAAU,EAAE,IAdhB;AAeI,MAAA,kBAAkB,EAAE,IAfxB;AAgBI,MAAA,qBAAqB,EAAE,KAhB3B;AAiBI,MAAA,oBAAoB,EAAE,CAjB1B;AAkBI,MAAA,eAAe,EAAE;AAAC,mBAAU;AAAX,OAlBrB;AAoBI,MAAA,UAAU,EAAE,KAAKa,eApBrB,CAwBI;AACA;AAzBJ;AA0BI,MAAA,YAAY,EAAE,CAAC,KAAKH,KAAL,CAAWC,MAAZ;AA1BlB;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AAxCsD","sourcesContent":["import FullCalendar from '@fullcalendar/react'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport React from 'react';\nimport userCourses from './ClassSearchBar'\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json'\nimport search_input from './ClassSearchBar'\n\n\n\nexport default class ReactCalendar extends React.Component {\n\n    calendarComponentRef = React.createRef();\n\n    state = {\n        events: this.props.events\n    }\n\n    render() {\n\n        return(\n            <FullCalendar\n                ref={this.calendarComponentRef}\n                plugins={[timeGridPlugin]}\n                initialView={'timeGridWeek'}\n                stickyHeaderDates={true}\n                stickyFooterScrollbar={true}\n                height={'auto'}\n                contentHeight={925}\n                editable={true}\n                slotMinTime={'8:00:00'}\n                slotMaxTime={\"22:00:00\"}\n                hiddenDays={[0,6]}\n                headerToolbar={false}\n                allDaySlot={false}\n                expandRows={true}\n                handleWindowResize={true}\n                eventDurationEditable={false}\n                eventDragMinDistance={0}\n                dayHeaderFormat={{'weekday':'long'}}\n\n                eventClick={this.handleDateClick}\n\n\n\n                //events={this.state.events}\n                //eventContent={renderEventContent}\n                eventSources={[this.state.events]}\n            />\n        )\n    }\n\n\n\n\n    handleDateClick = arg => {\n            this.setState({\n                events: this.state.events.concat(search_input)\n            });\n            this.render()\n        }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}