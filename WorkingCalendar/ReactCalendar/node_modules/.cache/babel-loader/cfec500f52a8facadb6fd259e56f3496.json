{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/ReactCalendar/src/components/ReactCalendar.js\";\nimport FullCalendar from '@fullcalendar/react';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport React from 'react';\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json';\nimport userCourses from './AddClasses';\nexport default class ReactCalendar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      events: []\n    };\n  }\n\n  handleUserCoursesChange() {\n    let userCourses;\n    this.setState({\n      events: userCourses\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [timeGridPlugin],\n        initialView: 'timeGridWeek',\n        stickyHeaderDates: true,\n        stickyFooterScrollbar: true,\n        height: 'auto',\n        contentHeight: 925,\n        editable: true,\n        slotMinTime: '8:00:00',\n        slotMaxTime: \"22:00:00\",\n        hiddenDays: [0, 6],\n        headerToolbar: false,\n        allDaySlot: false,\n        expandRows: true,\n        handleWindowResize: true,\n        eventDurationEditable: false,\n        eventDragMinDistance: 0,\n        dayHeaderFormat: {\n          'weekday': 'long'\n        },\n        eventStartEditable: true,\n        durationEditable: false //events={this.props.events}\n        ,\n        events: this.state.events //eventContent={renderEventContent}\n        //eventSources={[this.state.events]}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleUserCoursesChange(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/ReactCalendar/src/components/ReactCalendar.js"],"names":["FullCalendar","timeGridPlugin","interactionPlugin","React","ClassSearchBar","rosterdata","userCourses","ReactCalendar","Component","constructor","state","events","handleUserCoursesChange","setState","render"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,qBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAIA,eAAe,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAEvDC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAE;AADD,KAAX;AAGH;;AAEDC,EAAAA,uBAAuB,GAAG;AACtB,QAAIN,WAAJ;AAEA,SAAKO,QAAL,CAAc;AACVF,MAAAA,MAAM,EAAEL;AADE,KAAd;AAGH;;AAEFQ,EAAAA,MAAM,GAAG;AACJ,wBACI;AAAA,8BACA,QAAC,YAAD;AACI,QAAA,OAAO,EAAE,CAACb,cAAD,CADb;AAEI,QAAA,WAAW,EAAE,cAFjB;AAGI,QAAA,iBAAiB,EAAE,IAHvB;AAII,QAAA,qBAAqB,EAAE,IAJ3B;AAKI,QAAA,MAAM,EAAE,MALZ;AAMI,QAAA,aAAa,EAAE,GANnB;AAOI,QAAA,QAAQ,EAAE,IAPd;AAQI,QAAA,WAAW,EAAE,SARjB;AASI,QAAA,WAAW,EAAE,UATjB;AAUI,QAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,CAVhB;AAWI,QAAA,aAAa,EAAE,KAXnB;AAYI,QAAA,UAAU,EAAE,KAZhB;AAaI,QAAA,UAAU,EAAE,IAbhB;AAcI,QAAA,kBAAkB,EAAE,IAdxB;AAeI,QAAA,qBAAqB,EAAE,KAf3B;AAgBI,QAAA,oBAAoB,EAAE,CAhB1B;AAiBI,QAAA,eAAe,EAAE;AAAC,qBAAU;AAAX,SAjBrB;AAkBI,QAAA,kBAAkB,EAAE,IAlBxB;AAmBI,QAAA,gBAAgB,EAAE,KAnBtB,CAuBI;AAvBJ;AAwBI,QAAA,MAAM,EAAE,KAAKS,KAAL,CAAWC,MAxBvB,CAyBI;AACA;;AA1BJ;AAAA;AAAA;AAAA;AAAA,cADA,eA6BA;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,uBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AAvDsD","sourcesContent":["import FullCalendar from '@fullcalendar/react'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport React from 'react';\n\nimport ClassSearchBar from \"./ClassSearchBar\";\nimport * as rosterdata from './roster.json'\nimport userCourses from './AddClasses'\n\n\n\nexport default class ReactCalendar extends React.Component {\n\n    constructor() {\n        super();\n        this.state={\n            events: []\n        }\n    }\n\n    handleUserCoursesChange() {\n        let userCourses;\n\n        this.setState({\n            events: userCourses\n        })\n    }\n\n   render() {\n        return(\n            <body>\n            <FullCalendar\n                plugins={[timeGridPlugin]}\n                initialView={'timeGridWeek'}\n                stickyHeaderDates={true}\n                stickyFooterScrollbar={true}\n                height={'auto'}\n                contentHeight={925}\n                editable={true}\n                slotMinTime={'8:00:00'}\n                slotMaxTime={\"22:00:00\"}\n                hiddenDays={[0,6]}\n                headerToolbar={false}\n                allDaySlot={false}\n                expandRows={true}\n                handleWindowResize={true}\n                eventDurationEditable={false}\n                eventDragMinDistance={0}\n                dayHeaderFormat={{'weekday':'long'}}\n                eventStartEditable={true}\n                durationEditable={false}\n\n\n\n                //events={this.props.events}\n                events={this.state.events}\n                //eventContent={renderEventContent}\n                //eventSources={[this.state.events]}\n            />\n            <button onClick={() => this.handleUserCoursesChange()}\n                    >Refresh</button>\n            </body>\n\n        )\n\n\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}