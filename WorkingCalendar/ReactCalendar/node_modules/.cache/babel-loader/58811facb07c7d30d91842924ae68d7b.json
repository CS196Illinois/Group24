{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/ReactCalendar/src/components/AddClasses.js\";\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\nimport Fragment from 'render-fragment';\nlet search_input;\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i] === obj) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default class AddClasses extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userCourses: []\n    };\n  }\n\n  handleAddClick() {\n    if (containsObject(search_input, this.state.userCourses)) {\n      alert(\"Class already in schedule!\");\n    } else {\n      this.setState({\n        userCourses: this.state.userCourses.concat(search_input)\n      }, () => {//console.log(this.state.userCourses)\n      });\n      alert(\"Adding \" + search_input + \" To schedule\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        class: \"class_search_bar\",\n        options: data.courses,\n        autoComplete: true,\n        onChange: (event, object) => {\n          //console.log(object)\n          search_input = object;\n        },\n        getOptionLabel: option => option.title,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.handleAddClick();\n          this.props.addClick.handleClick(this.state.userCourses);\n        },\n        children: \" Add Class \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/ReactCalendar/src/components/AddClasses.js"],"names":["React","Autocomplete","TextField","data","Fragment","search_input","containsObject","obj","list","i","length","AddClasses","Component","constructor","state","userCourses","handleAddClick","alert","setState","concat","render","courses","event","object","option","title","params","props","addClick","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,IAAIC,YAAJ;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAC/B,MAAIC,CAAJ;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,QAAID,IAAI,CAACC,CAAD,CAAJ,KAAYF,GAAhB,EAAqB;AACjB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;;AAED,eAAe,MAAMI,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAEpDC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAEDC,EAAAA,cAAc,GAAG;AACb,QAAIV,cAAc,CAACD,YAAD,EAAe,KAAKS,KAAL,CAAWC,WAA1B,CAAlB,EAA0D;AACtDE,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KAFD,MAEO;AACH,WAAKC,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBI,MAAvB,CAA8Bd,YAA9B;AAAf,OAAd,EAA2E,MAAM,CAC7E;AACH,OAFD;AAGAY,MAAAA,KAAK,CAAC,YAAWZ,YAAX,GAA0B,cAA3B,CAAL;AACH;AAEJ;;AAGDe,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,YAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,OAAO,EAAEjB,IAAI,CAACkB,OAFlB;AAGI,QAAA,YAAY,EAAE,IAHlB;AAII,QAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB;AACAlB,UAAAA,YAAY,GAAGkB,MAAf;AACH,SAPL;AAQI,QAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACC,KARvC;AASI,QAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,UAAA,OAAO,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AAT7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnB,eAAKV,cAAL;AACA,eAAKW,KAAL,CAAWC,QAAX,CAAoBC,WAApB,CAAgC,KAAKf,KAAL,CAAWC,WAA3C;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AA5CmD","sourcesContent":["import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport * as data from './roster.json';\n\nimport Fragment from 'render-fragment';\n\nlet search_input;\n\nfunction containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i] === obj) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class AddClasses extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            userCourses: []\n        }\n    }\n\n    handleAddClick() {\n        if (containsObject(search_input, this.state.userCourses)) {\n            alert(\"Class already in schedule!\")\n        } else {\n            this.setState({userCourses : this.state.userCourses.concat(search_input)}, () => {\n                //console.log(this.state.userCourses)\n            })\n            alert(\"Adding \" +search_input + \" To schedule\")\n        }\n\n    }\n\n\n    render() {\n        return(\n            <Fragment>\n                <Autocomplete\n                    class=\"class_search_bar\"\n                    options={data.courses}\n                    autoComplete={true}\n                    onChange={(event, object) => {\n                        //console.log(object)\n                        search_input = object;\n                    }}\n                    getOptionLabel={(option) => option.title}\n                    renderInput={(params) => <TextField {...params} variant=\"outlined\"/>}\n                />\n                <button onClick={() => {\n                    this.handleAddClick();\n                    this.props.addClick.handleClick(this.state.userCourses);\n                }\n                }> Add Class </button>\n            </Fragment>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}