{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/isolis/WebstormProjects/untitled/src/components/TestCalendar.js\";\nimport React, { Component } from \"react\"; //import RRule from \"rrule\";\n\nimport { Calendar } from \"@fullcalendar/core\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport FullCalendar from \"@fullcalendar/react\";\nexport default class CalendarDemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.eventClick = info => {\n      //this is the new implementation:\n      console.log(this.state.calendar.view);\n      this.state.calendar.render();\n      return;\n      const start = this.state.calendar.getOption(\"visibleRange\");\n      const vEvents = this.state.calendar.getEvents().filter(event => {\n        return true;\n      });\n    };\n\n    this.state = {\n      calendar: null,\n      events: this.props.events\n    };\n    this.calendarRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const calendar = new Calendar(this.calendarRef.current, {\n      //plugins\n      plugins: [timeGridPlugin],\n      //display\n      initialView: \"timeGridWeek\",\n      slotMinTime: '8:00:00',\n      slotMaxTime: \"22:00:00\",\n      allDaySlot: false,\n      hiddenDays: [0, 6],\n      //selection\n      selectable: true,\n      select: this.select,\n      //event\n      events: [],\n      eventSources: [this.state.events],\n      eventClick: this.eventClick\n    });\n    calendar.render();\n    this.setState({\n      calendar\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.calendarRef,\n      children: \"Calendar component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isolis/WebstormProjects/untitled/src/components/TestCalendar.js"],"names":["React","Component","Calendar","timeGridPlugin","FullCalendar","CalendarDemo","constructor","props","eventClick","info","console","log","state","calendar","view","render","start","getOption","vEvents","getEvents","filter","event","events","calendarRef","createRef","componentDidMount","current","plugins","initialView","slotMinTime","slotMaxTime","allDaySlot","hiddenDays","selectable","select","eventSources","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAChDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsCnBC,UAtCmB,GAsCNC,IAAI,IAAI;AACjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAAhC;AACA,WAAKF,KAAL,CAAWC,QAAX,CAAoBE,MAApB;AACA;AAEA,YAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,SAApB,CAA8B,cAA9B,CAAd;AACA,YAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,SAApB,GAAgCC,MAAhC,CAAuCC,KAAK,IAAI;AAC5D,eAAO,IAAP;AACH,OAFe,CAAhB;AAGH,KAhDkB;;AAEf,SAAKT,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETS,MAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWe;AAFV,KAAb;AAIA,SAAKC,WAAL,gBAAmBvB,KAAK,CAACwB,SAAN,EAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,UAAMZ,QAAQ,GAAG,IAAIX,QAAJ,CAAa,KAAKqB,WAAL,CAAiBG,OAA9B,EAAuC;AACpD;AACAC,MAAAA,OAAO,EAAE,CAAExB,cAAF,CAF2C;AAIpD;AACAyB,MAAAA,WAAW,EAAE,cALuC;AAMpDC,MAAAA,WAAW,EAAE,SANuC;AAOpDC,MAAAA,WAAW,EAAE,UAPuC;AAQpDC,MAAAA,UAAU,EAAE,KARwC;AASpDC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAG,CAAH,CATwC;AAWpD;AACAC,MAAAA,UAAU,EAAE,IAZwC;AAapDC,MAAAA,MAAM,EAAE,KAAKA,MAbuC;AAepD;AACAZ,MAAAA,MAAM,EAAE,EAhB4C;AAiBpDa,MAAAA,YAAY,EAAE,CAAC,KAAKvB,KAAL,CAAWU,MAAZ,CAjBsC;AAkBpDd,MAAAA,UAAU,EAAE,KAAKA;AAlBmC,KAAvC,CAAjB;AAqBAK,IAAAA,QAAQ,CAACE,MAAT;AAEA,SAAKqB,QAAL,CAAc;AAAEvB,MAAAA;AAAF,KAAd;AACH;;AAeDE,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,GAAG,EAAE,KAAKQ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AArD+C","sourcesContent":["import React, { Component } from \"react\";\n//import RRule from \"rrule\";\nimport { Calendar } from \"@fullcalendar/core\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport FullCalendar from \"@fullcalendar/react\";\n\nexport default class CalendarDemo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendar: null,\n            events: this.props.events\n        };\n        this.calendarRef = React.createRef();\n    }\n\n    componentDidMount() {\n\n        const calendar = new Calendar(this.calendarRef.current, {\n            //plugins\n            plugins: [ timeGridPlugin],\n\n            //display\n            initialView: \"timeGridWeek\",\n            slotMinTime: '8:00:00',\n            slotMaxTime: \"22:00:00\",\n            allDaySlot: false,\n            hiddenDays: [0,6],\n\n            //selection\n            selectable: true,\n            select: this.select,\n\n            //event\n            events: [],\n            eventSources: [this.state.events],\n            eventClick: this.eventClick\n        });\n\n        calendar.render();\n\n        this.setState({ calendar });\n    }\n\n\n    eventClick = info => {\n        //this is the new implementation:\n        console.log(this.state.calendar.view);\n        this.state.calendar.render()\n        return;\n\n        const start = this.state.calendar.getOption(\"visibleRange\");\n        const vEvents = this.state.calendar.getEvents().filter(event => {\n            return true;\n        });\n    };\n\n    render() {\n        return <div ref={this.calendarRef}>Calendar component</div>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}